# ВАЖНЫЙ ФАЙЛ, ОПИСЫВАЮТСЯ ВСЕ ГЛАВНЫЕ НАСТРОЙКИ ПРОЕКТА

"""
Django settings for romansite project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# ЗАПИСЫВАЕТСЯ ПОЛНЫЙ ПУТЬ К НАШЕМУ ПРОЕКТУ
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# СЕКРЕТНЫЙ КЛЮЧ ДЛЯ УПРАВЛЕНИЯ САЙТОМ, ПРИ ВЫГРУЗКЕ НА СЕРВЕР МЕНЯЕМ НА ЧТО-ТО ДРУГОЕ
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-m8s#h7!=akzy2j@oapnx8$%p%m#3zo^8(od2rs-u58c84ssbuv'

# ЗНАЧЕНИЕ TRUE ПОЗВОЛЯЕТ ВИДЕТЬ ВСЕ ОШИБКИ ПРЯМО НА СТРАНИЦЕ ВЕБ-САЙТА
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ЗНАЧЕНИЕ ХОСТОВ/ДОМЕННЫХ ИМЕН, НА КОТОРЫХ БУДЕТ ОПУБЛИКОВАН НАШ САЙТ
ALLOWED_HOSTS = []


# Application definition

# НАБОР УСТАНОВЛЕННЫХ ПРИЛОЖЕНИЙ В НАШЕМ ПРОЕКТЕ
INSTALLED_APPS = [
    'main',  # 1. регистрируем новое приложение
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

# УСТАНОВЛЕННЫЕ БИБЛИОТЕКИ И ПЛАГИНЫ
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # 7.1 БЕЗОПАСНОСТЬ
    'django.contrib.sessions.middleware.SessionMiddleware',  # 7.2 РАБОТА С СЕССИЯМИ
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # 7.3 АВТОРИЗАЦИЯ ПРОЕКТА
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# ОСНОВНОЙ ФАЙЛ URLS, КОТОРЫЙ БУДЕТ ИСПОЛЬЗОВАТЬСЯ ДЛЯ ВСЕГО ПРОЕКТА
ROOT_URLCONF = 'romansite.urls'

# ШАБЛОНЫ ДЛЯ ПРОЕКТА
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# С ПОМОЩЬЮ ЭТОГО ФАЙЛА СМОЖЕМ ВЫГРУЗИТЬ САЙТ НА СЕРВЕР
WSGI_APPLICATION = 'romansite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# УКАЗАНО, С КАКОЙ БАЗОЙ ДАННЫХ МЫ РАБОТАЕМ
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

# ЯЗЫК
LANGUAGE_CODE = 'en-us'

# ВРЕМЕННАЯ ЗОНА
TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# УКАЗЫВАЕТ ИЗ ДОКУМЕНТАЦИИ ДЛЯ ТОГО, ЧТОБЫ ЛОКАЛЬНЫЙ ФАЙЛ СТИЛЕЙ .css КОРРЕКТНО РАБОТАЛ
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
